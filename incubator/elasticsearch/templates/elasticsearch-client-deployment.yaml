apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "{{ printf "%s-client-%s" .Release.Name .Values.Name | trunc 24 }}"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Component}}"
    type: client
spec:
  replicas: {{default 2 .Values.ClientReplicas }}
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Component}}"
        type: client
      annotations:
        # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
        # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
        pod.alpha.kubernetes.io/init-containers: '[
          {
            "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "Always",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      serviceAccountName: "{{ printf "%s-%s" .Release.Name .Values.Name | trunc 24 }}"
      containers:
      - name: elasticsearch
        env:
        - name: SERVICE
          value: "{{ printf "%s-cluster-%s" .Release.Name .Values.Name | trunc 24 }}"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_DATA
          value: "false"
        - name: NODE_MASTER
          value: "false"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{.Values.ClientHeapSize}} -Xmx{{.Values.ClientHeapSize}}"
        - name: KUBERNETES_MASTER
          value: kubernetes.default.svc.cluster.local
        resources:
          requests:
            cpu: "{{.Values.ClientCpuRequests}}"
            memory: "{{.Values.ClientMemoryRequests}}"
          limits:
            cpu: "{{.Values.ClientCpuLimits}}"
            memory: "{{.Values.ClientMemoryLimits}}"
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        image: "{{.Values.Image}}:{{.Values.ImageTag}}"
        imagePullPolicy: "{{.Values.ImagePullPolicy}}"
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: elasticsearch-config
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: elasticsearch-config
          subPath: logging.yml
      volumes:
      - name: elasticsearch-config
        configMap:
          name: "{{ printf "%s-%s" .Release.Name .Values.Name | trunc 24 }}"
